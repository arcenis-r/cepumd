[{"path":[]},{"path":"https://arcenis-r.github.io/cepumd/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://arcenis-r.github.io/cepumd/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://arcenis-r.github.io/cepumd/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://arcenis-r.github.io/cepumd/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://arcenis-r.github.io/cepumd/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@posit.co. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://arcenis-r.github.io/cepumd/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://arcenis-r.github.io/cepumd/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://arcenis-r.github.io/cepumd/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://arcenis-r.github.io/cepumd/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://arcenis-r.github.io/cepumd/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://arcenis-r.github.io/cepumd/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://arcenis-r.github.io/cepumd/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to cepumd","title":"Contributing to cepumd","text":"outlines propose change cepumd. detailed discussion contributing tidyverse packages, please see development contributing guide code review principles.","code":""},{"path":"https://arcenis-r.github.io/cepumd/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to cepumd","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://arcenis-r.github.io/cepumd/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to cepumd","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See guide create great issue advice.","code":""},{"path":"https://arcenis-r.github.io/cepumd/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to cepumd","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"arcenis-r/cepumd\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://arcenis-r.github.io/cepumd/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to cepumd","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://arcenis-r.github.io/cepumd/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to cepumd","text":"Please note cepumd project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://arcenis-r.github.io/cepumd/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://arcenis-r.github.io/cepumd/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://arcenis-r.github.io/cepumd/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://arcenis-r.github.io/cepumd/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://arcenis-r.github.io/cepumd/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://arcenis-r.github.io/cepumd/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://arcenis-r.github.io/cepumd/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://arcenis-r.github.io/cepumd/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://arcenis-r.github.io/cepumd/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://arcenis-r.github.io/cepumd/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://arcenis-r.github.io/cepumd/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://arcenis-r.github.io/cepumd/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://arcenis-r.github.io/cepumd/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://arcenis-r.github.io/cepumd/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://arcenis-r.github.io/cepumd/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://arcenis-r.github.io/cepumd/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://arcenis-r.github.io/cepumd/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://arcenis-r.github.io/cepumd/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://arcenis-r.github.io/cepumd/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://arcenis-r.github.io/cepumd/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://arcenis-r.github.io/cepumd/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://arcenis-r.github.io/cepumd/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with cepumd","title":"Getting help with cepumd","text":"Thanks using cepumd! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://arcenis-r.github.io/cepumd/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with cepumd","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty incredible ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://arcenis-r.github.io/cepumd/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with cepumd","text":"Armed reprex, next step figure ask. ’s question: start community.rstudio.com, /StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://arcenis-r.github.io/cepumd/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with cepumd","text":"efficient possible, development tidyverse packages tends bursty, shouldn’t worry don’t get immediate response. Typically don’t look repo sufficient quantity issues accumulates, ’s burst intense activity focus efforts. makes development efficient avoids expensive context switching problems, cost taking longer get back . process makes good reprex particularly important might multiple months initial report start working . can’t reproduce bug, can’t fix !","code":""},{"path":"https://arcenis-r.github.io/cepumd/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Arcenis Rojas. Author, maintainer, copyright holder.","code":""},{"path":"https://arcenis-r.github.io/cepumd/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rojas (2024). cepumd: Calculate Consumer Expenditure Survey (CE) Annual Estimates. R package version 2.1.0,  https://github.com/arcenis-r/cepumd, https://arcenis-r.github.io/cepumd/.","code":"@Manual{,   title = {cepumd: Calculate Consumer Expenditure Survey (CE) Annual Estimates},   author = {Arcenis Rojas},   year = {2024},   note = {R package version 2.1.0,  https://github.com/arcenis-r/cepumd},   url = {https://arcenis-r.github.io/cepumd/}, }"},{"path":"https://arcenis-r.github.io/cepumd/index.html","id":"cepumd-","dir":"","previous_headings":"","what":"Calculate Consumer Expenditure Survey (CE) Annual Estimates","title":"Calculate Consumer Expenditure Survey (CE) Annual Estimates","text":"purpose cepumd make working Consumer Expenditure Surveys (CE) Public-Use Microdata (PUMD) easier toward calculating mean, weighted, annual expenditures (henceforth “mean expenditures”). challenges cepumd seeks address deal primarily pulling together necessary data toward end. overarching ideas underlying package follows: Use Tidyverse framework operations (hopefully) generally Tidyverse friendly Balance effort make end user’s experience CE PUMD easier flexible enough allow user perform analysis data wish designed help users calculate mean expenditures consumer unit (CU), .e., income, assets, liabilities, gifts.","code":""},{"path":"https://arcenis-r.github.io/cepumd/index.html","id":"challenges-addressed-by-cepumd","dir":"","previous_headings":"","what":"Challenges addressed by cepumd","title":"Calculate Consumer Expenditure Survey (CE) Annual Estimates","text":"cepumd seeks address challenges three categories: data gathering/organization; managing data inconsistencies; calculating weighted, annual metrics. Convert hierarchical grouping (HG) files data tables using ce_hg() Help user identify Universal Classification Codes (UCCs) related analysis using combination ce_hg() ce_uccs() Combine required files variables using ce_prepdata() Provide ability recode variable categories using CE Dictionary Interview Diary Surveys Resolve inconsistencies differences code definitions Interview Diary (check definitions “FAM_TYPE” variable categories 2015 example) Provide useful errors warnings multiple categories something user trying access, e.g., titles hierarchical grouping files (“stub” “HG” files) repeat requires careful selection UCCs Calculate mean expenditure ce_mean() expenditure quantile ce_quantile() Account factor (annual vs. quarterly expenditure) Account “months scope” given consumer unit (CU) Annualize expenditures either Diary Interview expenditures Integrate Interview Diary data necessary","code":""},{"path":"https://arcenis-r.github.io/cepumd/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Calculate Consumer Expenditure Survey (CE) Annual Estimates","text":"Install production version install.packages(\"cepumd\") can install development version cepumd GitHub, ’ll first need devtools package:","code":"if (!\"devtools\" %in% installed.packages()[, \"Package\"]) {   install.packages(\"devtools\", dependencies = TRUE) }  devtools::install_github(\"arcenis-r/cepumd\")"},{"path":"https://arcenis-r.github.io/cepumd/index.html","id":"key-cepumd-functions","dir":"","previous_headings":"","what":"Key cepumd functions","title":"Calculate Consumer Expenditure Survey (CE) Annual Estimates","text":"workhorse cepumd ce_prepdata(). merges household characteristics file (FMLI/-D) corresponding expenditure tabulation file (MTBI/EXPD) specified year, adjusts weights months--scope number collection quarters, adjusts cost values periodicity factor (cost categories represented annual figures others quarterly). recent update requires first 3 arguments function: year, survey type, one valid UCCs. ce_prepdata() now creates necessary objects within function provided. two functions wrangling hierarchical grouping data usable formats: ce_hg() pulls requested type HG file (Interview, Diary, Integrated) specified year. ce_uccs() filters HG file specified expenditure category returns either data frame section HG file Universal Classification Codes (UCCs) make expenditure category. two functions user can use calculate CE summary statistics: ce_mean() calculates mean expenditure, standard error mean, coefficient variation, aggregate expenditure. ce_quantiles() calculates weighted expenditure quantiles. important note calculating medians integrated expenditures recommended calculation involves using weights Diary Survey instruments.","code":""},{"path":"https://arcenis-r.github.io/cepumd/reference/ce_hg.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a CE heiarchical grouping file to a data frame — ce_hg","title":"Convert a CE heiarchical grouping file to a data frame — ce_hg","text":"CE heiarchical grouping ('HG') file shows levels aggregation expenditure categories used produce official CE expenditure estimates. function reads CE HG file given year HG type data frame.","code":""},{"path":"https://arcenis-r.github.io/cepumd/reference/ce_hg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a CE heiarchical grouping file to a data frame — ce_hg","text":"","code":"ce_hg(year, survey, hg_zip_path = NULL, hg_file_path = NULL)"},{"path":"https://arcenis-r.github.io/cepumd/reference/ce_hg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a CE heiarchical grouping file to a data frame — ce_hg","text":"year year 1996 last year available CE PUMD. survey type HG file; one \"interview\", \"diary\", \"integrated\". Accepted character symbol. hg_zip_path path zip file containing HG files downloaded CE website. structure zip file must exactly downloaded useful function. hg_file_path path single HG file already extracted. argument given 'hg_zip_path' ignored.","code":""},{"path":"https://arcenis-r.github.io/cepumd/reference/ce_hg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a CE heiarchical grouping file to a data frame — ce_hg","text":"data frame containing following columns: level - hierarchical level expenditure category title - title expenditure category ucc - Universal Classification Code (UCC) expenditure category survey - survey instrument data given UCC sourced. helpful data type expenditure collected Interview Diary. factor - factor multiply expenditure calculation estimated means / medians","code":""},{"path":"https://arcenis-r.github.io/cepumd/reference/ce_hg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert a CE heiarchical grouping file to a data frame — ce_hg","text":"Interview Diary HG files available starting 1997 integrated files start 1996. consistency, function cepumd functions work data starting 1997. output contain expenditure UCCs UCCs related household characteristics, income, assets, liabilities. scope functions package limited expenditures. Income, example, imputed calculation income means goes different process expenditure means. Please see User's Guide Income Imputation CE","code":""},{"path":"https://arcenis-r.github.io/cepumd/reference/ce_hg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a CE heiarchical grouping file to a data frame — ce_hg","text":"","code":"if (FALSE) { # 'survey' can be entered as a string ce_hg(2016, \"integrated\", \"hg-files.zip\")  # 'survey' can also be entered as a symbol ce_hg(2016, integrated, \"hg-files.zip\") }"},{"path":"https://arcenis-r.github.io/cepumd/reference/ce_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate a CE weighted mean — ce_mean","title":"Calculate a CE weighted mean — ce_mean","text":"Calculate weighted mean using method used produce official CE estimates.","code":""},{"path":"https://arcenis-r.github.io/cepumd/reference/ce_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate a CE weighted mean — ce_mean","text":"","code":"ce_mean(ce_data)"},{"path":"https://arcenis-r.github.io/cepumd/reference/ce_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate a CE weighted mean — ce_mean","text":"ce_data data frame containing least finlwt21 column, 44 replicate weight columns (wtrep01-44), cost column, survey indicator column. survey column must numeric.","code":""},{"path":"https://arcenis-r.github.io/cepumd/reference/ce_mean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate a CE weighted mean — ce_mean","text":"1-row dataframe containing following columns: agg_exp - estimated aggregate expenditure mean_exp - estimated mean expenditure se - estimated standard error estimated mean expenditure cv - coefficient variation estimated mean expenditure","code":""},{"path":"https://arcenis-r.github.io/cepumd/reference/ce_mean.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate a CE weighted mean — ce_mean","text":"Estimates produced using PUMD, topcoded CE records suppressed protect respondent confidentiality, match published estimates released CE cases. CE's published estimates based confidential data topcoded records suppressed. can learn CE Protection Respondent Confidentiality","code":""},{"path":[]},{"path":"https://arcenis-r.github.io/cepumd/reference/ce_mean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate a CE weighted mean — ce_mean","text":"","code":"# Download the HG file keeping the section for expenditures on utilities if (FALSE) { utils_hg <- ce_hg(2017, interview) |>   ce_uccs(\"Utilities, fuels, and public services\", uccs_only = FALSE) }  # Download and prepare interview data if (FALSE) { utils_interview <- ce_prepdata(   2017,   interview,   uccs = ce_uccs(utils_hg, \"Utilities, fuels, and public services\"),   zp = NULL,   integrate_data = FALSE,   hg = utils_hg,   bls_urbn ) }  # Calculate the mean expenditure on utilities if (FALSE) ce_mean(utils_interview)  # Calculate the mean expenditure on utilities by urbanicity if (FALSE) { utils_interview |>   tidyr::nest(-bls_urbn) |>   mutate(mean_utils = purrr::map(data, ce_mean)) |>   select(-data) |>   unnest(mean_utils) }"},{"path":"https://arcenis-r.github.io/cepumd/reference/ce_prepdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare CE data for calculating an estimated mean or median — ce_prepdata","title":"Prepare CE data for calculating an estimated mean or median — ce_prepdata","text":"Reads family characteristics (FMLI/-D) expenditure tabulation (MTBI/EXPD) files merges relevant data calculating weighted mean median.","code":""},{"path":"https://arcenis-r.github.io/cepumd/reference/ce_prepdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare CE data for calculating an estimated mean or median — ce_prepdata","text":"","code":"ce_prepdata(   year,   survey,   hg,   uccs,   ...,   int_zp = NULL,   dia_zp = NULL,   recode_variables = FALSE,   dict_path = NULL,   own_codebook = NULL )"},{"path":"https://arcenis-r.github.io/cepumd/reference/ce_prepdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare CE data for calculating an estimated mean or median — ce_prepdata","text":"year year 1997 last year available CE PUMD. survey One either interview, diary, integrated character symbol. hg data frame , least, title, level, ucc, factor columns CE HG file. Calling ce_hg() generate valid HG file. uccs character vector UCCs corresponding expenditure categories hierarchical grouping (HG) given year survey. ... Variables include dataset family characteristics file. intended allow user calculate estimates subsets data. int_zp String indicating path Interview data zip file(s) already stored. file(s) exist corresponding zip file stored path. default NULL causes zip file stored temporary memory function operation. dia_zp int_zp , Diary data. recode_variables logical indicating whether recode coded variables except 'UCC' using codes CE's excel dictionary can downloaded CE Documentation Page dict_path string indicating path CE PUMD dictionary stored already stored. file exist recode_variables = TRUE dictionary stored path. default NULL causes zip file stored temporary memory function operation. Automatically changed NULL valid input own_codebook given. own_codebook optional data frame containing user-defined codebook containing columns CE Dictionary \"Codes \" sheet. input data frame required columns, function give error message. See details required columns.","code":""},{"path":"https://arcenis-r.github.io/cepumd/reference/ce_prepdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare CE data for calculating an estimated mean or median — ce_prepdata","text":"data frame containing following columns: newid - consumer unit (CU), household, identifier finlwt21 - CU weight variable wtrep01 wtrep44 - CU replicate weight variables (see details) ... - family characteristics variables kept mo_scope - Months scope (see details) popwt - adjusted weight meant account fact CUs value finlwt21 meant representative 1 quarter data (see details) ucc - UCC given expenditure ref_yr - year corresponding expenditure occurred ref_mo - month corresponding expenditure occurred cost - value expenditure (U.S. Dollars) survey - indicator survey data come : \"\" Interview \"D\" Diary.","code":""},{"path":"https://arcenis-r.github.io/cepumd/reference/ce_prepdata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prepare CE data for calculating an estimated mean or median — ce_prepdata","text":"CE microdata include 45 weights. primary weight used calculating estimated means medians finlwt21. 44 replicate weights computed using Balanced Repeated Replication (BRR) used calculating weighted standard errors. \"Months scope\" refers proportion data collection quarter CU reported expenditures. Diary survey months scope always 3 expenditure data collected meant reported quarter collected. Interview Survey, hand, quarterly, rolling, recall survey CU's report expenditures 3 months previous month data collected. example, CU interviewed February 2017, providing data November 2016, December 2016, January 2017. one calculating weighted estimated mean 2017 calendar year, January 2017 data \"scope.\" CE data reported quarterly, sum weights (finlwt21) CU's meant represent total number U.S. CU's given year. Since calculating calendar year estimate requires use 4 quarters data sum weights quarter equals number households U.S. given year, adding sums weights 4 quarters data yield total number households approximately 4 times larger actual number households U.S. corresponding year. Since UCC's can appear surveys, purposes integration, CE source selection procedure choose source data taken given UCC. example, 4 UCC's \"Pets\" category 2017 two sourced publication Diary two Interview. Please download CE Source Selection Document complete listing: https://www.bls.gov/cex/ce_source_integrate.xlsx. Family characteristic variables added \"...\" read character data type.","code":""},{"path":[]},{"path":"https://arcenis-r.github.io/cepumd/reference/ce_quantiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate a CE weighted quantiles — ce_quantiles","title":"Calculate a CE weighted quantiles — ce_quantiles","text":"Calculate CE weighted quantiles","code":""},{"path":"https://arcenis-r.github.io/cepumd/reference/ce_quantiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate a CE weighted quantiles — ce_quantiles","text":"","code":"ce_quantiles(ce_data, probs = 0.5)"},{"path":"https://arcenis-r.github.io/cepumd/reference/ce_quantiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate a CE weighted quantiles — ce_quantiles","text":"ce_data data frame containing least finlwt21 column cost column. columns must numeric. probs numeric vector probabilities 0 1 compute quantiles. Default 0.5 (median).","code":""},{"path":"https://arcenis-r.github.io/cepumd/reference/ce_quantiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate a CE weighted quantiles — ce_quantiles","text":"two-column data frame first column contains probabilities quantiles calculated corresponding quantiles second column.","code":""},{"path":[]},{"path":"https://arcenis-r.github.io/cepumd/reference/ce_quantiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate a CE weighted quantiles — ce_quantiles","text":"","code":"if (FALSE) { # Download the HG file keeping the section for expenditures on utilities utils_hg <- ce_hg(2017, interview) |>   ce_uccs(\"Utilities, fuels, and public services\", uccs_only = FALSE)  # Download and prepare interview data utils_interview <- ce_prepdata(   2017,   interview,   uccs = ce_uccs(utils_hg, \"Utilities, fuels, and public services\"),   zp = NULL,   integrate_data = FALSE,   hg = utils_hg,   bls_urbn )  # Calculate the 25%, 50%, and 75% utilities expenditure quantiles ce_quantiles(utils_interview)  # Calculate the 25%, 50%, and 75% utilities expenditure quantiles by # urbanicity utils_interview |>   tidyr::nest(-bls_urbn) |>   mutate(quant_utils = purrr::map(data, ce_quantiles, c(0.25, 0.5, 0.75))) |>   select(-data) |>   unnest(quant_utils) }"},{"path":"https://arcenis-r.github.io/cepumd/reference/ce_uccs.html","id":null,"dir":"Reference","previous_headings":"","what":"Find UCCs for expenditure categories — ce_uccs","title":"Find UCCs for expenditure categories — ce_uccs","text":"Find UCCs expenditure categories","code":""},{"path":"https://arcenis-r.github.io/cepumd/reference/ce_uccs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find UCCs for expenditure categories — ce_uccs","text":"","code":"ce_uccs(hg, expenditure = NULL, ucc_group = NULL, uccs_only = TRUE)"},{"path":"https://arcenis-r.github.io/cepumd/reference/ce_uccs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find UCCs for expenditure categories — ce_uccs","text":"hg data frame , least, title, level, ucc columns CE HG file. expenditure string expenditure category contained CE HG file (exact match required). Either expenditure ucc_group required. default NULL. ucc_group string indicating expenditure category UCC group CE HG file (exact match required). Either expenditure ucc_group required. default NULL. uccs_only logical indicating whether return expenditure category's component ucc's. TRUE (default), vector UCC's returned. FALSE, dataframe returned containing section HG file containing expenditure category component sub- categories","code":""},{"path":"https://arcenis-r.github.io/cepumd/reference/ce_uccs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find UCCs for expenditure categories — ce_uccs","text":"vector Universal Classification Codes (UCC's) corresponding lowest hierarchical level category.","code":""},{"path":"https://arcenis-r.github.io/cepumd/reference/ce_uccs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find UCCs for expenditure categories — ce_uccs","text":"valid expenditure valid ucc_group input, ucc_group used.","code":""},{"path":"https://arcenis-r.github.io/cepumd/reference/ce_uccs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find UCCs for expenditure categories — ce_uccs","text":"","code":"if (FALSE) { # First generate an HG file my_hg <- ce_hg(2021, interview, hg_file_path = \"CE-HG-Inter-2021.txt\")  # Store a vector of UCC's in the \"Pets\" category pet_uccs <- ce_uccs(my_hg, \"Pets\") pet_uccs # [1] \"610320\" \"620410\" \"620420\" }"},{"path":"https://arcenis-r.github.io/cepumd/reference/cepumd-package.html","id":null,"dir":"Reference","previous_headings":"","what":"cepumd: Calculate Consumer Expenditure Survey (CE) Annual Estimates — cepumd-package","title":"cepumd: Calculate Consumer Expenditure Survey (CE) Annual Estimates — cepumd-package","text":"Provides functions data files help CE Public-Use Microdata (PUMD) users calculate annual estimated expenditure means, standard errors, quantiles according methods used CE PUMD. information CE please visit https://www.bls.gov/cex. reading CE estimate calculations please see CE Calculation section U.S. Bureau Labor Statistics (BLS) Handbook Methods https://www.bls.gov/opub/hom/cex/calculation.htm. information CE PUMD please visit https://www.bls.gov/cex/pumd.htm.","code":""},{"path":[]},{"path":"https://arcenis-r.github.io/cepumd/reference/cepumd-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"cepumd: Calculate Consumer Expenditure Survey (CE) Annual Estimates — cepumd-package","text":"Maintainer: Arcenis Rojas arcenis.rojas@gmail.com [copyright holder]","code":""},{"path":"https://arcenis-r.github.io/cepumd/reference/get_survey_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate tables of the necessary survey data files — get_survey_files","title":"Generate tables of the necessary survey data files — get_survey_files","text":"Generate tables necessary survey data files","code":""},{"path":"https://arcenis-r.github.io/cepumd/reference/get_survey_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate tables of the necessary survey data files — get_survey_files","text":"","code":"get_survey_files(year, survey, file_yrs, qtrs, zp_file)"},{"path":"https://arcenis-r.github.io/cepumd/reference/get_survey_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate tables of the necessary survey data files — get_survey_files","text":"year year 1996 last year available CE PUMD. survey One either interview, diary, integrated character symbol. file_yrs substrings years pull data, .e., years files pulled across different files. qtrs quarters included analysis given year. zp_file Character indicating zip file containing CE PUMD given year","code":""},{"path":"https://arcenis-r.github.io/cepumd/reference/get_survey_files.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate tables of the necessary survey data files — get_survey_files","text":"hidden file called exported package functions.","code":""},{"path":"https://arcenis-r.github.io/cepumd/reference/read.expd.html","id":null,"dir":"Reference","previous_headings":"","what":"Read in and modify EXPD files — read.expd","title":"Read in and modify EXPD files — read.expd","text":"Read modify EXPD files","code":""},{"path":"https://arcenis-r.github.io/cepumd/reference/read.expd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read in and modify EXPD files — read.expd","text":"","code":"read.expd(fp, zp, year, uccs, integrate_data, hg)"},{"path":"https://arcenis-r.github.io/cepumd/reference/read.expd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read in and modify EXPD files — read.expd","text":"fp File extract zip file zp Zip file path year Year uccs Vector UCC's filter integrate_data Whether prepare data integrated estimates hg Hierarchical grouping data","code":""},{"path":"https://arcenis-r.github.io/cepumd/reference/read.expd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read in and modify EXPD files — read.expd","text":"hidden file called exported package functions.","code":""},{"path":"https://arcenis-r.github.io/cepumd/reference/read.fmld.html","id":null,"dir":"Reference","previous_headings":"","what":"Read in and modify FMLD files — read.fmld","title":"Read in and modify FMLD files — read.fmld","text":"Read modify FMLD files","code":""},{"path":"https://arcenis-r.github.io/cepumd/reference/read.fmld.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read in and modify FMLD files — read.fmld","text":"","code":"read.fmld(fp, zp, ...)"},{"path":"https://arcenis-r.github.io/cepumd/reference/read.fmld.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read in and modify FMLD files — read.fmld","text":"fp File extract zip file zp Zip file path ... <dynamic-dots> Additional variables keep (intended grouping)","code":""},{"path":"https://arcenis-r.github.io/cepumd/reference/read.fmld.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read in and modify FMLD files — read.fmld","text":"hidden file called exported package functions.","code":""},{"path":"https://arcenis-r.github.io/cepumd/reference/read.fmli.html","id":null,"dir":"Reference","previous_headings":"","what":"Read in and modify FMLI files — read.fmli","title":"Read in and modify FMLI files — read.fmli","text":"Read modify FMLI files","code":""},{"path":"https://arcenis-r.github.io/cepumd/reference/read.fmli.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read in and modify FMLI files — read.fmli","text":"","code":"read.fmli(fp, zp, year, ...)"},{"path":"https://arcenis-r.github.io/cepumd/reference/read.fmli.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read in and modify FMLI files — read.fmli","text":"fp File extract zip file zp Zip file path within ce_dir year Year ... <dynamic-dots> Additional variables keep (intended grouping)","code":""},{"path":"https://arcenis-r.github.io/cepumd/reference/read.fmli.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read in and modify FMLI files — read.fmli","text":"hidden file called exported package functions.","code":""},{"path":"https://arcenis-r.github.io/cepumd/reference/read.mtbi.html","id":null,"dir":"Reference","previous_headings":"","what":"Read in and modify MTBI files — read.mtbi","title":"Read in and modify MTBI files — read.mtbi","text":"Read modify MTBI files","code":""},{"path":"https://arcenis-r.github.io/cepumd/reference/read.mtbi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read in and modify MTBI files — read.mtbi","text":"","code":"read.mtbi(fp, zp, year, uccs, integrate_data, hg)"},{"path":"https://arcenis-r.github.io/cepumd/reference/read.mtbi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read in and modify MTBI files — read.mtbi","text":"fp File extract zip file zp Zip file path year Year uccs Vector UCC's filter integrate_data Whether prepare data integrated estimates hg Hierarchical grouping data","code":""},{"path":"https://arcenis-r.github.io/cepumd/reference/read.mtbi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read in and modify MTBI files — read.mtbi","text":"hidden file called exported package functions.","code":""},{"path":"https://arcenis-r.github.io/cepumd/reference/recode_ce_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Recode variables in interview and diary data — recode_ce_variables","title":"Recode variables in interview and diary data — recode_ce_variables","text":"Recode variables interview diary data","code":""},{"path":"https://arcenis-r.github.io/cepumd/reference/recode_ce_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recode variables in interview and diary data — recode_ce_variables","text":"","code":"recode_ce_variables(srvy_data, code_file, srvy)"},{"path":"https://arcenis-r.github.io/cepumd/reference/recode_ce_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recode variables in interview and diary data — recode_ce_variables","text":"srvy_data data frame containing either Interview Diary data prepped code_file dataframe containing variable names, codes, code descriptions, required columns recoding variables srvy survey instrument recoded (filtering codebook)","code":""},{"path":"https://arcenis-r.github.io/cepumd/reference/recode_ce_variables.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Recode variables in interview and diary data — recode_ce_variables","text":"hidden file called exported package functions.","code":""},{"path":"https://arcenis-r.github.io/cepumd/news/index.html","id":"cepumd-210","dir":"Changelog","previous_headings":"","what":"cepumd 2.1.0","title":"cepumd 2.1.0","text":"CRAN release: 2024-03-18 Refactored code resolve variable bindings warnings Corrected calculation CE annual estimates","code":""},{"path":[]},{"path":[]},{"path":"https://arcenis-r.github.io/cepumd/news/index.html","id":"cepumd-200","dir":"Changelog","previous_headings":"","what":"cepumd 2.0.0","title":"cepumd 2.0.0","text":"Hard deprecated functions downloading data metadata BLS website due policy change longer allows webscraping. Using readr::read_csv() readr::read_lines() funcitonality reading directly zip file. longer requiring data one single place, allowing flexibility refer zip files metadata files individual path names. Changed “%>%” pipes “|>” well anonymous function references “~ .x” notation “\\(x)” notation","code":""},{"path":"https://arcenis-r.github.io/cepumd/news/index.html","id":"cepumd-141","dir":"Changelog","previous_headings":"","what":"cepumd 1.4.1","title":"cepumd 1.4.1","text":"Corrected filter conditions reading Diary monthly tabulation files. computing Diary expenditures CE filter year. Also added Github CI, GPL3 License, {pkgdown} files, files vignette.","code":""},{"path":"https://arcenis-r.github.io/cepumd/news/index.html","id":"cepumd-140","dir":"Changelog","previous_headings":"","what":"cepumd 1.4.0","title":"cepumd 1.4.0","text":"Refactored ce_prepdata make ... useful allow user accept default arguments. Added “ref_yr” “ref_mo” variables output ce_prepdata() allow users make inflation adjustments “cost” values Refactored ce_means() conform newer Tidyverse functions summarize input data “survey”, “ucc”, “newid” (opposed level reference month year done ce_prepdata())","code":""},{"path":"https://arcenis-r.github.io/cepumd/news/index.html","id":"cepumd-130","dir":"Changelog","previous_headings":"","what":"cepumd 1.3.0","title":"cepumd 1.3.0","text":"Added ucc_group parameter ce_uccs() deal fact UCC titles identical. Combinations ucc_group title identical stub files. ucc_group primary parameter. Also, previous versions ce_hg() unwrapped titles wrapped 2 lines, thereby leaving titles wrapped lines incomplete. method now updated able deal multi-line titles 2 lines.","code":""},{"path":"https://arcenis-r.github.io/cepumd/news/index.html","id":"cepumd-121","dir":"Changelog","previous_headings":"","what":"cepumd 1.2.1","title":"cepumd 1.2.1","text":"Patched issue ce_uccs() coutldn’t handle cases level decreases one finding UCCs directly title row requested expenditure category.","code":""},{"path":[]},{"path":"https://arcenis-r.github.io/cepumd/news/index.html","id":"cepumd-110","dir":"Changelog","previous_headings":"","what":"cepumd 1.1.0","title":"cepumd 1.1.0","text":"added dependency  require .data$ prefix data objects used Tidyverse pipelines. also corrected fixed width position conditions ce_hg() converting HG files tables Diary stubs 1997 2012 others read incorrectly. also made changes example workflows README file.","code":""},{"path":"https://arcenis-r.github.io/cepumd/news/index.html","id":"cepumd-101","dir":"Changelog","previous_headings":"","what":"cepumd 1.0.1","title":"cepumd 1.0.1","text":"version  incorporates one important change perspective design philosophy adds couple utility functions help user. First, imposes bit strict structure file management. One biggest challenges using Consumer Expenditure Survey (CE) Public-Use Microdata (PUMD) getting data. first major advantage using package user just simple functions. However, first version package little structure given files stored downloaded. 2021 CE changed way uploads data Interview zip files longer contain 5 quarters data necessary calculate estimated means given calendar year. Now, weighted estimates annual expenditures calendar year 2020, user download zip file year interest previous year. written, previous version  generating incorrect estimates pull data year interest. adapting code new way CE stores data, found necessary impose bit structure storage data order keep coding burden end user low. actually resulted set functions now easier work . notable change functions downloading data now argument user can provide path directory want use store data. Alternatively,  create sub-directory R session’s temporary directory. two utility functions ce_pumd_years() ce_cleanup(). ce_pumd_years() allows user get vector years data available download. function also used validity checks across functions case user asks download data year data available ce_cleanup() simply removes directory user provides . Alternatively, run argument, look subdirectory called “ce-data” R session’s temporary directory (tempdir()) delete .","code":""},{"path":"https://arcenis-r.github.io/cepumd/news/index.html","id":"cepumd-022","dir":"Changelog","previous_headings":"","what":"cepumd 0.2.2","title":"cepumd 0.2.2","text":"first version  released CRAN designed help Consumer Expenditure Survey (CE) Public-Use Microdata (PUMD) users generate weighted means medians following methods used CE.","code":""}]
